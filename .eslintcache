[{"D:\\semicolon\\DSM_Auth_Frontend\\src\\index.js":"1","D:\\semicolon\\DSM_Auth_Frontend\\src\\reportWebVitals.js":"2","D:\\semicolon\\DSM_Auth_Frontend\\src\\App.js":"3","D:\\semicolon\\DSM_Auth_Frontend\\src\\GlobalStyled.js":"4","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\index.js":"5","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Main\\Main.js":"6","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\Login.js":"7","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\LoginClient.js":"8","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Register\\Register.js":"9","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Consumer\\Consumer.js":"10","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\myPage\\myPage.js":"11","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Main\\MainBody.js":"12","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Main\\styles.js":"13","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Register\\styles.js":"14","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\LoginButton.js":"15","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\styles.js":"16","D:\\semicolon\\DSM_Auth_Frontend\\src\\animation.js":"17","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Consumer\\styles.js":"18","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Api\\Api.js":"19","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\myPage\\styles.js":"20","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\index.js":"21","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Api\\styles.js":"22","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\Header\\Header.js":"23","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\Header\\Menu.js":"24","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\Header\\styles.js":"25","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\myPage\\registerModal.js":"26"},{"size":675,"mtime":1609595670460,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1609133781372,"results":"29","hashOfConfig":"28"},{"size":821,"mtime":1610199949627,"results":"30","hashOfConfig":"28"},{"size":807,"mtime":1614057195633,"results":"31","hashOfConfig":"28"},{"size":327,"mtime":1610199922596,"results":"32","hashOfConfig":"28"},{"size":2893,"mtime":1614057195633,"results":"33","hashOfConfig":"28"},{"size":3917,"mtime":1609595934697,"results":"34","hashOfConfig":"28"},{"size":2490,"mtime":1609464204224,"results":"35","hashOfConfig":"28"},{"size":6056,"mtime":1614057195633,"results":"36","hashOfConfig":"28"},{"size":1902,"mtime":1609925036683,"results":"37","hashOfConfig":"28"},{"size":2061,"mtime":1614057394138,"results":"38","hashOfConfig":"28"},{"size":9467,"mtime":1614057195633,"results":"39","hashOfConfig":"28"},{"size":7620,"mtime":1614057195633,"results":"40","hashOfConfig":"28"},{"size":2454,"mtime":1609238557687,"results":"41","hashOfConfig":"28"},{"size":308,"mtime":1609133781370,"results":"42","hashOfConfig":"28"},{"size":5774,"mtime":1609240025655,"results":"43","hashOfConfig":"28"},{"size":4798,"mtime":1614057195633,"results":"44","hashOfConfig":"28"},{"size":1018,"mtime":1609925016795,"results":"45","hashOfConfig":"28"},{"size":22900,"mtime":1614057195633,"results":"46","hashOfConfig":"28"},{"size":3392,"mtime":1614056989956,"results":"47","hashOfConfig":"28"},{"size":51,"mtime":1609133781371,"results":"48","hashOfConfig":"28"},{"size":3486,"mtime":1614057195633,"results":"49","hashOfConfig":"28"},{"size":2334,"mtime":1614057195633,"results":"50","hashOfConfig":"28"},{"size":713,"mtime":1610199806176,"results":"51","hashOfConfig":"28"},{"size":1704,"mtime":1614057195633,"results":"52","hashOfConfig":"28"},{"size":3011,"mtime":1614056989956,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"cjaq5q",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\semicolon\\DSM_Auth_Frontend\\src\\index.js",[],["117","118"],"D:\\semicolon\\DSM_Auth_Frontend\\src\\reportWebVitals.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\App.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\GlobalStyled.js",["119"],"import styled, { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyled = createGlobalStyle`\n    body, html {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n        position: relative;\n    }\n\n    #root {\n        width: 100%;\n        height: 100%;\n    }\n\n    * {\n        box-sizing: border-box;\n        user-select: none;\n        -webkit-user-select: text;\n        white-space: nowrap;\n        letter-spacing: -1.5px;\n        font-family: 'Noto Sans KR', sans-serif;    \n    }\n\n    .clicked {\n        transition: 0.2s all ease-out;\n        overflow-y: visible;\n    }\n\n    .clicked::after {\n        transform: translateY(-50%) rotate(-50deg);\n    }\n\n    .clicked::before {\n        transform: translateY(-50%) rotate(50deg);\n    }\n`;\n\nexport default GlobalStyled;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\index.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Main\\Main.js",["120","121"],"import React, { useEffect, useState } from \"react\";\nimport Api from \"../Api/Api\";\nimport MainBody from \"./MainBody\";\n\nimport * as S from \"./styles\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { Header } from \"../Public\";\n\nimport { useCookies } from \"react-cookie\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport queryString from \"query-string\";\n\nconst Main = (props) => {\n  const query = queryString.parse(props.location.search);\n  const [Acookie, Aset, Aremove] = useCookies([\"access-token\"]);\n  const [Rcookie, Rset, Rremove] = useCookies([\"refresh-token\"]);\n  const [loginState, setLogin] = useState(false);\n  const [number, setNumber] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    window.onkeydown = function (event) {\n      const kcode = event.keyCode;\n      if (kcode == 116) {\n        history.replace(window.location.pathname);\n      }\n    };\n\n    if (\n      query.code &&\n      Acookie[\"access-token\"] === undefined &&\n      Rcookie[\"refresh-token\"] === undefined\n    ) {\n      axios({\n        method: \"post\",\n        url: \"/dsmauth/token\",\n        data: {\n          code: query.code,\n          client_id: \"123456\",\n          client_secret: \"1234\",\n        },\n      })\n        .then((res) => {\n          Aset(\"access-token\", res.data[\"access-token\"], {\n            expires: new Date(Date.now() + 1000 * 60 * 60 * 2),\n          });\n          Rset(\"refresh-token\", res.data[\"refresh-token\"], {\n            expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 14),\n          });\n\n          setLogin(true);\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    } else if (Acookie[\"access-token\"] !== undefined) {\n      setLogin(true);\n    }\n  }, []);\n\n  const LogOut = () => {\n    Aremove(\"access-token\");\n    Rremove(\"refresh-token\");\n\n    setLogin(false);\n\n    history.push(\"/\");\n  };\n\n  const switchPage = (name) => {\n    let page = \"\";\n    switch (name) {\n      case \"android\":\n        setNumber(1);\n        page = 2;\n        break;\n      case \"ios\":\n        setNumber(2);\n        page = 3;\n        break;\n      case \"api\":\n        setNumber(3);\n        page = 4;\n        break;\n      case \"start\":\n        setNumber(0);\n        page = 1;\n        break;\n      default:\n        setNumber(null);\n        page = \"\";\n        break;\n    }\n    history.push(`/docs/${page}`);\n  };\n\n  return (\n    <>\n      <S.Wrapper>\n        <Header\n          AToken={Acookie[\"access-token\"]}\n          login={loginState}\n          LogOut={LogOut}\n          switchPage={switchPage}\n        />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <MainBody switchPage={switchPage} />}\n          />\n          <Route path=\"/docs\" render={() => <Api number={number} />} />\n        </Switch>\n      </S.Wrapper>\n    </>\n  );\n};\n\nexport default Main;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\Login.js",["122","123","124","125","126","127","128"],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as S from \"./styles\";\n\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useCookies } from  'react-cookie'\n\nimport queryString from \"query-string\";\n\nimport logo from \"../../assets/ass.svg\";\n\nimport LoginButton from \"./LoginButton\";\n\nconst Login = (props) => {\n  const query = queryString.parse(props.location.search);\n  const [id, setId] = useState(\"\");\n  const [password, setPass] = useState(\"\");\n  const check = useRef();\n  const history = useHistory();\n  const [Rcookie, Rset, Rremove] = useCookies(['refresh-token'])\n  const [Acookie, Aset, Aremove] = useCookies(['access-token'])\n\n  useEffect(() => {\n    history.replace(\"login?redirect_url=http://localhost:3000&client_id=123456\")\n    if(Rcookie['refresh-token'] !== undefined) {\n      axios({\n        method: 'get',\n        url: '/dsmauth/refresh',\n        headers: {\n          'refresh-token': `Bearer ${Rcookie['refresh-token']}`\n        }\n      })\n      .then(res => {\n        console.log(res)\n\n        Aset('access-token', res.data['access-token'], {expires: new Date(Date.now() + 1000 * 60 * 60 * 2)})\n        history.push('/')\n      })\n      .catch(err => {\n        console.log(err.response)\n      })\n    }\n  }, [])\n\n  const login = (e) => {\n    e.preventDefault();\n    const { redirect_url, client_id } = query;\n    if (!check.current.checked) {\n      alert(\"체크항목을 확인하세요.\");\n      if (!(id === \"\" || password === \"\")) {\n        return;\n      }\n    }\n    if (id === \"\" || password === \"\") {\n      if (id === \"\") {\n        // document.getElementById(\"id1\").style.color = \"red\";\n      }\n      if (password === \"\") {\n        // document.getElementById(\"password1\").style.color = \"red\";\n      }\n      alert(\"아이디나 비밀번호를 입력하세요.\");\n      return;\n    }\n    \n    console.log({\n      id,\n      password,\n      redirect_url,\n      client_id,\n    })\n    axios({\n      url: \"/dsmauth/login\",\n      method: \"post\",\n      data: {\n        id,\n        password,\n        redirect_url,\n        client_id,\n      },\n    })\n      .then((res) => {\n        window.location.href = res.data.location;\n      })\n      .catch((err) => {\n        switch(err.response.status) {\n          case 401:\n            alert(\"아이디나 비밀번호가 틀렸습니다.\");\n            break;\n          default:\n            alert(\"에러가 났습니다 !\")\n            break;\n        }\n      });\n  };\n\n  //if(Object.keys(query).length === 0) return <>Error</>;\n\n  return (\n    <S.Section bgColor=\"black\">\n      <S.Img\n        onClick={() => {\n          props.my === true && history.push(\"/\");\n        }}\n        src={logo}\n        width=\"300\"\n      />\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n        onSubmit={login}\n        method=\"GET\"\n      >\n        <S.InputWrapper>\n          <S.Input\n            value={id}\n            type=\"text\"\n            onChange={(e) => \n              setId(e.target.value)\n            }\n          />\n          <S.Inter id=\"id1\" on={id != \"\" ? true : false}>\n            ID\n          </S.Inter>\n        </S.InputWrapper>\n        <S.InputWrapper>\n          <S.Input\n            value={password}\n            type=\"password\"\n            onChange={(e) => setPass(e.target.value)}\n          />\n          <S.Inter id=\"password1\" on={password != \"\" ? true : false}>\n            PASSWORD\n          </S.Inter>\n        </S.InputWrapper>\n        <S.Agree>\n          당신의 정보를 서비스에서 이용하는걸 동의하십니까 ?\n          <S.CheckBox id=\"asd\" type=\"checkbox\" ref={check} />\n          <S.Label htmlFor=\"asd\" />\n        </S.Agree>\n        <LoginButton onSubmit={login} />\n      </form>\n      <S.LinkA to=\"/register\">아이디가 없으신가요 ?</S.LinkA>\n    </S.Section>\n  );\n};\n\nexport default Login;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\LoginClient.js",["129","130","131","132","133","134"],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as S from \"./styles\";\n\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport queryString from \"query-string\";\n\nimport logo from \"../../assets/ass.svg\";\n\nconst LoginClient = (props) => {\n  const query = queryString.parse(props.location.search);\n  const [id, setId] = useState(\"\");\n  const [password, setPass] = useState(\"\");\n  const [error, setErr] = useState([false, false]);\n  const check = useRef();\n  const history = useHistory();\n\n  const login = (e) => {\n    e.preventDefault();\n    const { redirect_url, client_id } = query;\n    /* if (!check.current.checked) {\n      alert(\"체크항목을 확인하세요.\");\n      if (!(id === \"\" || password === \"\")) {\n        return;\n      }\n    } */\n    if (id === \"\" || password === \"\") {\n      if (id === \"\") {\n        // document.getElementById(\"id1\").style.color = \"red\";\n      }\n      if (password === \"\") {\n        // document.getElementById(\"password1\").style.color = \"red\";\n      }\n      alert(\"아이디나 비밀번호를 입력하세요.\");\n      return;\n    }\n    axios({\n      url: \"/dsmauth/login\",\n      method: \"post\",\n      data: {\n        id,\n        password,\n        redirect_url,\n        client_id,\n      },\n    })\n      .then((res) => {\n        console.log(res.data);\n        window.location.href = res.data.location;\n      })\n      .catch((err) => {\n        alert(\"아이디나 비밀번호가 틀렸습니다.\");\n        console.log(err);\n      });\n  };\n\n  return (\n    <S.Section nono>\n      <S.Header>\n        <img height=\"100%\" src={logo} />\n      </S.Header>\n      <S.BodyWrapper>\n        <S.ContentBox>\n          <h2 style={{ color: \"black\" }}>Login</h2>\n          <form\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n            method=\"GET\"\n          >\n            <S.CInput\n              value={id}\n              onChange={(e) => setId(e.target.value)}\n              type=\"text\"\n              placeholder=\"ID\"\n            />\n            <S.CInput\n              value={password}\n              onChange={(e) => setPass(e.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <S.CButton onClick={login}>Login</S.CButton>\n          </form>\n        </S.ContentBox>\n      </S.BodyWrapper>\n    </S.Section>\n  );\n};\n\nexport default LoginClient;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Register\\Register.js",["135","136","137"],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Consumer\\Consumer.js",["138","139"],"import React, {useState} from 'react'\r\nimport * as S  from './styles'\r\n\r\nimport {useCookies} from 'react-cookie'\r\n\r\nimport axios from 'axios'\r\n\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport logo from '../../assets/ass.svg'\r\n\r\nconst Consumer = () => {\r\n    const [name, setName] = useState('')\r\n    const [domain, setDomain] = useState('')\r\n    const [redirect, setRedirect] = useState('')\r\n    const [Acookie, Aset, Aremove] = useCookies(['access-token'])\r\n    const history = useHistory()\r\n\r\n    const register = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/consumer/registration',\r\n            headers: {\r\n                'access-token': `Bearer ${Acookie['access-token']}`\r\n            },\r\n            data: {\r\n                consumer: name,\r\n                domain_url: domain,\r\n                redirect_url: redirect\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            history.replace('/api')\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <S.BodyWrapper>\r\n            <S.Logo onClick={() => history.replace('/api')} src={logo} />\r\n            <S.ContentWrapper>\r\n                <S.Header>사용자 등록하기</S.Header>\r\n                <S.InputBox value={name} onChange={e => setName(e.target.value)} type=\"text\" placeholder=\"서비스 이름을 입력해주세요.\" />\r\n                <S.InputBox value={domain} onChange={e => setDomain(e.target.value)} type=\"text\" placeholder=\"도메인을 입력해주세요.\" />\r\n                <S.InputBox value={redirect} onChange={e => setRedirect(e.target.value)} type=\"text\" placeholder=\"Redirect_URL을 입력해주세요.\" />\r\n                <S.Button onClick={register}>등록하기</S.Button>\r\n            </S.ContentWrapper>\r\n        </S.BodyWrapper>\r\n    )\r\n}\r\n\r\nexport default Consumer","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\myPage\\myPage.js",["140"],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Main\\MainBody.js",["141","142","143","144","145","146","147"],"import React, { useState, useEffect } from \"react\";\nimport * as S from \"./styles\";\n\nimport banner from \"../../assets/banner.jpg\";\nimport icon from \"../../assets/icon.svg\";\nimport arrow from \"../../assets/right-arrow.svg\";\n\nimport axios from \"axios\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  FirstAnimation,\n  SlideShow,\n  Welcome,\n  Count,\n  AutoScroll,\n} from \"../../animation\";\n\nconst Me = [\n  \"매번 프로젝트에서 로그인을 만들라니까 너무 귀찮아요.\",\n  \"프로젝트를 이용하는데 매번 계정을 만들기 힘들어요.\",\n  \"아니 귀찮다고\",\n];\n\nconst MainBody = (props) => {\n  const [list, setList] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    FirstAnimation();\n    SlideShow();\n    Welcome();\n    AutoScroll();\n    axios({\n      method: \"get\",\n      url: \"/consumer/list\",\n    })\n      .then((res) => {\n        Count(res.data.length);\n        setList(res.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  }, []);\n\n  const source = `\n    const foo = 'bar'\n    const bar = 'foo'\n    const baz = foo + bar\n  `;\n\n  return (\n    <S.BodyWrapper>\n      <S.Section id=\"section1\" img={banner} height=\"500px\">\n        <S.ContentBox column>\n          <S.H1Box id=\"welcome\">\n            DSM Auth에 오신 것을 환영합니다.\n            <br />\n            저희 DSM Auth에서는 마이스터고등학교 OAuth 서비스를\n            <br />\n            제공하고 있습니다. 지금 바로 사용해보세요 !\n            <S.ButtonBox>\n              <S.SButton\n                onClick={() => props.switchPage(null)}\n                color=\"white\"\n                bgColor=\"#132FB8\"\n              >\n                Open API\n              </S.SButton>\n              <S.SButton onClick={() => history.push(\"/login\")}>\n                로그인\n              </S.SButton>\n            </S.ButtonBox>\n          </S.H1Box>\n        </S.ContentBox>\n      </S.Section>\n      <S.Section className=\"headerPoint\" bgColor=\"black\" height=\"auto\">\n        <S.ContentBox stair column>\n          <S.ContentTitle>DSM Auth Services</S.ContentTitle>\n          <S.ApiBoxWrapper>\n            <S.ApiBox>\n              <S.ApiTitle>\n                Android SDK\n                <S.ApiDes>\n                  안드로이드 개발중 DSM Auth를 더욱 쉽게 사용해보세요.\n                </S.ApiDes>\n              </S.ApiTitle>\n              <div>\n                <S.ApiButton\n                  onClick={() =>\n                    (window.location.href =\n                      \"https://bintray.com/jaewonkim1468/dsm-sdk-v1/dsmauth\")\n                  }\n                >\n                  시작하기\n                </S.ApiButton>\n                <S.ApiButton onClick={() => props.switchPage(\"android\")}>\n                  문서보기\n                </S.ApiButton>\n              </div>\n            </S.ApiBox>\n            <S.ApiBox>\n              <S.ApiTitle>\n                iOS SDK\n                <S.ApiDes>\n                  iOS 개발중 DSM Auth를 더욱 쉽게 사용해보세요.\n                </S.ApiDes>\n              </S.ApiTitle>\n              <div>\n                <S.ApiButton\n                  onClick={() =>\n                    (window.location.href = \"https://cocoapods.org/pods/DSMSDK\")\n                  }\n                >\n                  시작하기\n                </S.ApiButton>\n                <S.ApiButton onClick={() => props.switchPage(\"ios\")}>\n                  문서보기\n                </S.ApiButton>\n              </div>\n            </S.ApiBox>\n            <S.ApiBox>\n              <S.ApiTitle>\n                DSM Auth API\n                <S.ApiDes>\n                  DSM Auth의 Open API를 확인하고 쉽게 사용해보세요.\n                </S.ApiDes>\n              </S.ApiTitle>\n              <div>\n                <S.ApiButton>시작하기</S.ApiButton>\n                <S.ApiButton onClick={() => props.switchPage(\"api\")}>\n                  문서보기\n                </S.ApiButton>\n              </div>\n            </S.ApiBox>\n            <S.ApiBox>\n              <S.ApiTitle>\n                시작하기\n                <S.ApiDes>모든 문서를 한눈에 보고 쉽게 사용해보세요.</S.ApiDes>\n              </S.ApiTitle>\n              <S.ApiButton onClick={() => props.switchPage(\"start\")} only>\n                문서보기\n              </S.ApiButton>\n            </S.ApiBox>\n          </S.ApiBoxWrapper>\n        </S.ContentBox>\n      </S.Section>\n      <S.Section id=\"slidePoint\" bgColor=\"black\" height=\"auto\">\n        <S.ContentBox stair column>\n          <S.ContentTitle>\n            Made By <span style={{ fontWeight: 700 }}>Semicolon;</span>\n          </S.ContentTitle>\n          <S.SFlexBox center bet>\n            <S.SDes id=\"madeSec\">\n              이런 문제점들을 DSM Auth가 해결합니다.\n              <br /> Semicolon;이 만들어 나갑니다.\n            </S.SDes>\n            <S.HalfBox height=\"500px\">\n              <S.SFlexBox col bet>\n                {Me.map((message, i) => (\n                  <S.MBox className=\"aM\" i={i}>\n                    <img width=\"60\" height=\"60\" src={icon} />\n                    <p style={{ margin: \"0 0 0 10px\" }}>{message}</p>\n                  </S.MBox>\n                ))}\n              </S.SFlexBox>\n            </S.HalfBox>\n          </S.SFlexBox>\n        </S.ContentBox>\n      </S.Section>\n      <S.Section bgColor=\"black\" height=\"auto\">\n        <S.ContentBox stair column>\n          <S.BigTitle>\n            현재 <span id=\"count\">0</span>개의 서비스가 DSM Auth와 함께합니다.\n          </S.BigTitle>\n          <S.ListWrapper id=\"scrollWrap\">\n            {list.length != 0 &&\n              list.map((val) => (\n                <S.Item>\n                  <span>{val.name}</span>\n                  <a style={{ color: \"white\" }} href={val.domain_url}>\n                    {val.domain_url}\n                  </a>\n                </S.Item>\n              ))}\n          </S.ListWrapper>\n        </S.ContentBox>\n      </S.Section>\n      <S.Section bgColor=\"black\" height=\"auto\">\n        <S.ContentBox stair column>\n          <S.ContentTitle>Other Information</S.ContentTitle>\n          <S.SFlexBox bet>\n            <S.ProfileBox\n              onClick={() =>\n                (window.location.href = \"https://semicolondsm.xyz\")\n              }\n            >\n              <S.ProfileImg\n                size=\"auto 100%\"\n                src=\"https://cdn.pixabay.com/photo/2017/02/26/00/36/borders-2099226_960_720.png\"\n              />\n              <S.ProfileBottom>\n                <S.ProfileTitle>Semicolon; 대동여지도</S.ProfileTitle>\n                <S.ProfileSub href=\"https://semicolondsm.xyz\">\n                  semicolon.xyz\n                </S.ProfileSub>\n                <S.Arrow>\n                  <img width=\"auto\" height=\"40px\" src={arrow} />\n                </S.Arrow>\n              </S.ProfileBottom>\n            </S.ProfileBox>\n            <S.ProfileBox\n              onClick={() =>\n                (window.location.href = \"https://github.com/semicolonDSM\")\n              }\n            >\n              <S.ProfileImg\n                size=\"90% auto\"\n                src=\"https://cdn.pixabay.com/photo/2014/07/15/23/36/github-394322__340.png\"\n              />\n              <S.ProfileBottom>\n                <S.ProfileTitle>Semicolon; Github</S.ProfileTitle>\n                <S.ProfileSub href=\"https://github.com/semicolonDSM\">\n                  github.com/semicolonDSM\n                </S.ProfileSub>\n                <S.Arrow>\n                  <img width=\"auto\" height=\"40px\" src={arrow} />\n                </S.Arrow>\n              </S.ProfileBottom>\n            </S.ProfileBox>\n            <S.ProfileBox\n              onClick={() =>\n                (window.location.href = \"https://ko.wikipedia.org/wiki/OAuth\")\n              }\n            >\n              <S.ProfileImg\n                size=\"100% auto\"\n                src=\"https://cdn.pixabay.com/photo/2015/10/31/11/59/information-1015298__340.jpg\"\n              />\n              <S.ProfileBottom>\n                <S.ProfileTitle>OAuth란?</S.ProfileTitle>\n                <S.ProfileSub href=\"https://ko.wikipedia.org/wiki/OAuth\">\n                  ko.wikipedia.org/wiki/OAuth\n                </S.ProfileSub>\n                <S.Arrow>\n                  <img width=\"auto\" height=\"40px\" src={arrow} />\n                </S.Arrow>\n              </S.ProfileBottom>\n            </S.ProfileBox>\n            <S.ProfileBox\n              onClick={() =>\n                (window.location.href =\n                  \"https://ko.wikipedia.org/wiki/%EC%8C%8D%EB%B0%98%EC%A0%90\")\n              }\n            >\n              <S.ProfileImg\n                size=\"auto 100%\"\n                src=\"https://cdn.pixabay.com/photo/2015/11/06/12/51/news-1027337__340.jpg\"\n              />\n              <S.ProfileBottom>\n                <S.ProfileTitle>Semicolon; 의 뜻</S.ProfileTitle>\n                <S.ProfileSub href=\"https://ko.wikipedia.org/wiki/%EC%8C%8D%EB%B0%98%EC%A0%90\">\n                  ko.wikipedia.org/wiki/%EC%8C%8D%EB%B0%98%EC%A0%90\n                </S.ProfileSub>\n                <S.Arrow>\n                  <img width=\"auto\" height=\"40px\" src={arrow} />\n                </S.Arrow>\n              </S.ProfileBottom>\n            </S.ProfileBox>\n          </S.SFlexBox>\n        </S.ContentBox>\n      </S.Section>\n    </S.BodyWrapper>\n  );\n};\n\nexport default MainBody;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Main\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Register\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\LoginButton.js",["148","149"],"import React, { useEffect, useRef } from \"react\";\n\nimport * as S from \"./styles\";\n\nconst LoginButton = (props) => {\n  return (\n    <S.Button id=\"circleButton\" onClick={props.onSubmit}>\n      <S.Circle id=\"circle\" />\n      <S.ButtonP>로그인</S.ButtonP>\n    </S.Button>\n  );\n};\n\nexport default LoginButton;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Login\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\animation.js",["150"],"import gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/all\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nfunction getDivTop(name) {\n  return document.getElementById(name).getBoundingClientRect().top;\n}\n\nfunction getScroll() {\n  return document.documentElement.scrollTop;\n}\n\nexport const Welcome = () => {\n  const self = document.getElementById(\"welcome\");\n  self.style.transform = \"translate(0, -50%)\";\n  self.style.opacity = 1;\n};\n\nexport const HeaderAnimation = () => {\n  const pathname = window.location.pathname;\n  if (getScroll() >= 100) {\n    document.getElementById(\"header\").style.background = \"rgba(26, 26, 28, 1)\";\n  } else {\n    document.getElementById(\"header\").style.background = \"rgba(26, 26, 28, 0)\";\n  }\n  window.addEventListener(\"scroll\", () => {\n    if (pathname !== window.location.pathname) return;\n    if (getScroll() >= 100) {\n      document.getElementById(\"header\").style.background =\n        \"rgba(26, 26, 28, 1)\";\n    } else {\n      document.getElementById(\"header\").style.background =\n        \"rgba(26, 26, 28, 0)\";\n    }\n  });\n};\n\nexport const FirstAnimation = () => {\n  const asd = gsap.timeline();\n\n  asd\n    .from(\"#first\", { x: -50, opacity: 0 })\n    .to(\"#first\", { x: 0, opacity: 1, duration: 0.2 });\n\n  ScrollTrigger.create({\n    animation: asd,\n    trigger: \"#first\",\n    start: \"-=500\",\n    end: \"+=200\",\n    toggleActions: \"play complete pause reset\",\n  });\n};\n\nexport const Show = (name) => {\n  const asd = gsap.timeline();\n\n  asd\n    .from(name, { opacity: 0, x: -80, duration: 1 })\n    .to(name, { x: 0, opacity: 1, duration: 1 });\n};\n\nexport const SlideShow = () => {\n  const pathname = window.location.pathname;\n  const self = [...document.getElementsByClassName(\"aM\")];\n  let isOn = false;\n\n  window.addEventListener(\"scroll\", () => {\n    if (pathname !== window.location.pathname) return;\n    if (getScroll() > getDivTop(\"slidePoint\") + 500) {\n      isOn = false;\n      self.forEach((element, index) => {\n        setTimeout(() => {\n          if (isOn) return;\n          element.style.transform = `translateX(${index * 85}px)`;\n          element.style.opacity = 1;\n        }, 80 * index);\n      });\n    } else {\n      isOn = true;\n      self.forEach((element, index) => {\n        element.style.transform = `translateX(${index * 85 - 50}px)`;\n        element.style.opacity = 0;\n      });\n    }\n  });\n};\n\nexport const Count = (max) => {\n  const pathname = window.location.pathname;\n  const self = document.getElementById(\"count\");\n  let number = 0;\n  let isPro = false;\n  let timer;\n\n  window.addEventListener(\"scroll\", () => {\n    if (pathname !== window.location.pathname) return;\n    if (getScroll() > getDivTop(\"count\") + 400) {\n      if (isPro) return;\n      timer = setInterval(() => {\n        if (number >= max) clearInterval(timer);\n        number += 1;\n        self.innerText = number;\n      }, 1000 / max);\n      isPro = true;\n    } else {\n      clearInterval(timer);\n      isPro = false;\n      number = 0;\n      self.innerText = 0;\n    }\n  });\n};\n\nexport const AutoScroll = () => {\n  const pathname = window.location.pathname;\n  const self = document.getElementById(\"scrollWrap\");\n  let isOn = false;\n  let timer;\n\n  function easeOutSine(x) {\n    return Math.sqrt(1 - Math.pow(x - 1, 2));\n  }\n\n  const scroll = () => {\n    let count = 0;\n    let prevNum = 0;\n    const temp = setInterval(() => {\n      if (count >= 100) {\n        clearInterval(temp);\n        prevNum = 0;\n        return;\n      }\n      const easeNum = easeOutSine(count / 100) * 110;\n      const plus = easeNum - prevNum;\n      self.scrollTop += plus;\n      count += 1;\n      prevNum = easeNum;\n    }, 1000 / 100);\n  };\n\n  const scrollTop = () => {\n    let count = 0;\n    let prevNum = 0;\n    const sh = self.scrollHeight;\n\n    const temp = setInterval(() => {\n      if (count >= sh) {\n        clearInterval(temp);\n        prevNum = 0;\n        return;\n      }\n      const easeNum = easeOutSine(count / sh) * sh;\n      const plus = easeNum - prevNum;\n      console.log(plus);\n      self.scrollTop -= plus;\n      count += 1;\n      prevNum = easeNum;\n    }, 1000 / sh);\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    if (pathname !== window.location.pathname) return;\n    const sh = self.scrollHeight;\n    const ch = self.clientHeight;\n    if (getScroll() > getDivTop(\"scrollWrap\") + 800) {\n      if (isOn) return;\n      timer = setInterval(() => {\n        if (self.scrollTop + ch === sh) {\n          scrollTop();\n        } else {\n          scroll();\n        }\n      }, 3500);\n      isOn = true;\n    } else {\n      clearInterval(timer);\n      isOn = false;\n    }\n  });\n};\n\nfunction isInner(name) {\n  const self = document.getElementById(name);\n  if (document.documentElement.scrollTop >= self.getBoundingClientRect().top) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Consumer\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Api\\Api.js",["151","152","153","154","155","156"],"import React, { useLayoutEffect, useEffect } from \"react\";\n\nimport { Route, useHistory } from \"react-router-dom\";\n\nimport * as S from \"./styles\";\n\nconst androidcode = `val instance=DsmSdk.instance\n\ninstance.initSDK(\"<$client_id>\",\"<$client_secret>\",\"<$redirect_url>\")`;\n\nconst androidcode2 = `val tokenCallback:(DTOtoken?,Throwable?)->Unit={token,error->    //토큰을 받아왔을때의 콜백메서드\n  if(error!=null){\n      Log.e(\"sdk\",error)\n  }\n  else if(token!=null){\n      val accessToken=token.access_token   //access토큰\n      val refreshToken=token.refresh_token //refresh토큰\n      Toast.makeText(this,\"로그인 성공\",Toast.LENGTH_SHORT).show()\n  }\n}\n\nval loginCallBack:(DTOuser?)->Unit={  //사용자 정보를 받아왔을때의 콜백메서드\n  val name=it?.name                //이름\n  val email=it?.email              //이메일\n  val gcn=it?.gcn                  //학번\n}\ninstance.loginWithAuth(this,callback,loginCallBack) //loginWithAuth메서드 호출`;\n\nconst androidcode3 = `val acessTokenCallBack:(accessToken:String)->Unit={\n  Log.d(\"토큰\",it)    //refreshToken이 잘못되거나 오류가 날 경우 null 이 반홥됩니다.\n}\ninstance.refreshToken(refreshToken,acessTokenCallBack)`;\n\nconst androidcode4 = `val checkToken:(DTOuser?)->Unit={\n  if (it != null) { //accessToken이 잘못되면 null이 반환됩니다.\n      Log.d(\"사용자\",it.name)\n      Log.d(\"사용자\",it.email)\n      Log.d(\"사용자\",it.gcn)\n  }\n}\ninstance.getUserInformation(accessToken,checkToken)`;\n\nconst swiftcode = `import DSMSDK\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n  \n  ...\n  DSMSDKCommon.initSDK(clientID: 〈CLIENT_ID〉,\n                       clientSecret: 〈CLIENT_SECRET〉,\n                       redirectURL: 〈REDIRECT_URL〉)\n  ...\n  \n}`;\n\nconst swiftcode2 = `DSMAUTH.loginWithDSMAuth(vc: self) { (token, error) in\n\tif let error = error {\n\t\tprint(error)\n\t}\n  else {\n    print(\"loginWithDSMAuth() success!\")\n\n    //do something\n    _ = token!.Access_Token\n    _ = token!.Refresh_Token\n\t}\n}`;\n\nconst swiftcode3 = `DSMAUTH.tokenRefresh(refresh_token: 〈REFRESH_TOKEN〉){ (access_token, error) in\n\tif let error = error{\n\t\tprint(error)\n\t}\n\telse{\n    print(\"tokenRefresh() success!\")\n\n    //do something\n\t\t_ = access_token!\n\t}\n}`;\n\nconst swiftcode4 = `DSMAUTH.me(access_token: 〈ACCESS_TOKEN〉){ (user, error) in\n\tif let error = error{\n\t\tprint(error)\n\t}\n\telse{\n\t\tprint(\"me() success!\")\n\n    //do something\n    _ = user!.name\n    _ = user!.StudentID\n    _ = user!.email\n\t}\n}`;\n\nconst Api = (props) => {\n  const history = useHistory();\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (event) => {\n      const kcode = event.keyCode;\n      if (kcode == 116) {\n        event.preventDefault();\n        if (window.location.pathname.slice(1, 5) == \"docs\") {\n          window.location.href =\n            window.location.origin + window.location.pathname.slice(0, 6);\n        }\n      }\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    [...document.getElementsByClassName(\"titles\")].forEach((element, index) => {\n      element.addEventListener(\"click\", () => {\n        const self = document.getElementsByClassName(\"itemWrap\")[index];\n        element.classList.toggle(\"clicked\");\n        if (element.classList.contains(\"clicked\")) {\n          self.style.height = self.scrollHeight + \"px\";\n        } else {\n          self.style.height = 0;\n        }\n      });\n    });\n\n    [...document.getElementsByClassName(\"itemWrap\")].forEach(\n      (element, index) => {\n        [...element.children].forEach((childElement, childIndex) => {\n          if (childElement.classList.contains(\"no\")) return;\n          childElement.addEventListener(\"click\", () => {\n            [...document.getElementsByClassName(\"no\")].forEach((delement) => {\n              delement.children[0].style.opacity = 0;\n            });\n            document.getElementById(`item${index + 1}Fill`).style.opacity = 1;\n            history.replace(`/docs/${index + 1}`);\n          });\n        });\n      }\n    );\n\n    if (props.number == null) return;\n    document.getElementsByClassName(\"itemWrap\")[props.number].style.height =\n      document.getElementsByClassName(\"itemWrap\")[props.number].scrollHeight +\n      \"px\";\n    document.getElementById(`item${props.number + 1}Fill`).style.opacity = 1;\n    document\n      .getElementsByClassName(\"titles\")\n      [props.number].classList.toggle(\"clicked\");\n  }, []);\n\n  useLayoutEffect(() => {\n    const target = document.getElementById(\"docs\");\n    const config = {\n      attributes: true,\n      childList: true,\n      characterData: true,\n    };\n\n    function callback() {\n      if (window.location.pathname.slice(1, 5) != \"docs\") return;\n      window.addEventListener(\"scroll\", () => {\n        if (\n          window.location.pathname.slice(1, 5) != \"docs\" ||\n          isNaN(window.location.href.slice(-1))\n        )\n          return;\n        [...document.getElementsByClassName(\"docsWrap\")[0].children].forEach(\n          (element, index) => {\n            const elementOffset = element.getBoundingClientRect().top - 125;\n            const offset =\n              element.getBoundingClientRect().top +\n              document.documentElement.scrollTop -\n              125;\n            const height = element.clientHeight;\n            let hun = Math.abs(\n              ((offset + height - document.documentElement.scrollTop - height) /\n                height) *\n                47\n            );\n            if (Math.floor(elementOffset) <= 0) {\n              if (\n                hun + index * 47 >=\n                (document.getElementsByClassName(\"docsWrap\")[0].children\n                  .length -\n                  1) *\n                  47\n              ) {\n                hun = 0;\n              }\n              document.getElementById(\n                `item${window.location.pathname.slice(-1)}Fill`\n              ).style.transform = `translateY(${hun + index * 47}px)`;\n              if (\n                document.documentElement.scrollTop +\n                  document.documentElement.clientHeight ==\n                document.documentElement.scrollHeight\n              ) {\n                document.getElementById(\n                  `item${window.location.pathname.slice(-1)}Fill`\n                ).style.transform = `translateY(${\n                  (document.getElementsByClassName(\"docsWrap\")[0].children\n                    .length -\n                    1) *\n                  47\n                }px)`;\n              }\n            }\n          }\n        );\n      });\n      [...document.getElementsByClassName(\"itemWrap\")].forEach(\n        (element, index) => {\n          [...element.children].forEach((childElement, childIndex) => {\n            if (childElement.classList.contains(\"no\")) return;\n            childElement.addEventListener(\"click\", () => {\n              const self = document.getElementById(\n                `section${index + 1}${childIndex + 1}`\n              );\n\n              document.documentElement.scrollTo({\n                top:\n                  self.getBoundingClientRect().top +\n                  document.documentElement.scrollTop -\n                  125,\n                behavior: \"smooth\",\n              });\n            });\n          });\n        }\n      );\n    }\n\n    const observer = new MutationObserver(callback);\n\n    observer.observe(target, config);\n    callback();\n  }, []);\n\n  useLayoutEffect(() => {\n    const page = window.location.pathname.slice(-1);\n    if (isNaN(page)) return;\n\n    [\n      ...document.getElementsByClassName(\"itemWrap\")[Number(page) - 1].children,\n    ].forEach((element) => {\n      if (element.classList.contains(\"no\")) return;\n      [...document.getElementsByClassName(\"docsWrap\")[0].children].forEach(\n        (docsElement, index) => {\n          docsElement.setAttribute(\"id\", `section${page}${index + 1}`);\n        }\n      );\n    });\n  });\n\n  return (\n    <S.Wrapper>\n      <S.SideBar>\n        <S.SideItem>\n          <S.SideTitle className=\"titles\">시작하기</S.SideTitle>\n          <S.SideSubWrapper className=\"itemWrap\">\n            <S.SideSub>소개</S.SideSub>\n            <S.SideSub>로그인 하기</S.SideSub>\n            <S.SideSub>어플리케이션 등록하기</S.SideSub>\n            <S.SideLine className=\"no\">\n              <S.SideLineFill id=\"item1Fill\"></S.SideLineFill>\n            </S.SideLine>\n          </S.SideSubWrapper>\n        </S.SideItem>\n        <S.SideItem>\n          <S.SideTitle className=\"titles\">Android SDK</S.SideTitle>\n          <S.SideSubWrapper className=\"itemWrap\">\n            <S.SideSub>시작하기</S.SideSub>\n            <S.SideSub>준비하기</S.SideSub>\n            <S.SideSub>로그인</S.SideSub>\n            <S.SideSub>토큰 재발급</S.SideSub>\n            <S.SideSub>정보 받아오기</S.SideSub>\n            <S.SideSub>더보기</S.SideSub>\n            <S.SideLine className=\"no\">\n              <S.SideLineFill id=\"item2Fill\"></S.SideLineFill>\n            </S.SideLine>\n          </S.SideSubWrapper>\n        </S.SideItem>\n        <S.SideItem>\n          <S.SideTitle className=\"titles\">iOS SDK</S.SideTitle>\n          <S.SideSubWrapper className=\"itemWrap\">\n            <S.SideSub>시작하기</S.SideSub>\n            <S.SideSub>준비하기</S.SideSub>\n            <S.SideSub>로그인</S.SideSub>\n            <S.SideSub>토큰 재발급</S.SideSub>\n            <S.SideSub>정보 받아오기</S.SideSub>\n            <S.SideSub>더보기</S.SideSub>\n            <S.SideLine className=\"no\">\n              <S.SideLineFill id=\"item3Fill\"></S.SideLineFill>\n            </S.SideLine>\n          </S.SideSubWrapper>\n        </S.SideItem>\n        <S.SideItem>\n          <S.SideTitle className=\"titles\">Api Docs</S.SideTitle>\n          <S.SideSubWrapper className=\"itemWrap\">\n            <S.SideSub>시작하기</S.SideSub>\n            <S.SideSub>로그인</S.SideSub>\n            <S.SideSub>토큰 재발급</S.SideSub>\n            <S.SideSub>정보 받아오기</S.SideSub>\n            <S.SideLine className=\"no\">\n              <S.SideLineFill id=\"item4Fill\"></S.SideLineFill>\n            </S.SideLine>\n          </S.SideSubWrapper>\n        </S.SideItem>\n      </S.SideBar>\n      <S.Section>\n        <S.ContentBox id=\"docs\">\n          <Route path=\"/docs/1\">\n            <S.DocsWrapper className=\"docsWrap\">\n              <S.DocsSection>\n                <S.DocsTitle>시작하기</S.DocsTitle>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>로그인하기</S.DocsTitle>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>어플리케이션 등록하기</S.DocsTitle>\n              </S.DocsSection>\n            </S.DocsWrapper>\n          </Route>\n          <Route path=\"/docs/2\">\n            <S.DocsWrapper className=\"docsWrap\">\n              <S.DocsSection>\n                <S.DocsTitle>시작하기</S.DocsTitle>\n                <S.DocsSubTitle>주의사항</S.DocsSubTitle>\n                <S.DocsDes>\n                  이 문서는 안드로이드에서 DSM_Auth를 사용하는 방법을\n                  안내합니다.\n                </S.DocsDes>\n                <S.DocsSubTitle>요구사항</S.DocsSubTitle>\n                <S.DocsDes>\n                  DSMSDK를 사용하기 위한 최소 요구사양은 아래와 같습니다.\n                  <br /> - Android api level 23(Android 6.0)이상\n                </S.DocsDes>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>준비하기</S.DocsTitle>\n                <S.DocsSubTitle>설치하기</S.DocsSubTitle>\n                <S.DocsDes>\n                  1. Module 수준의 build.gradle에 다음 dependencies 를\n                  추가해줍니다.\n                </S.DocsDes>\n                <S.DocsCode>\n                  implementation 'com.semicolon.dsm_sdk_v1:dsmauth:1.2.8'\n                </S.DocsCode>\n                <S.DocsDes>\n                  2. <b>sync now</b> 를 클릭합니다.\n                  <br />\n                  <br />\n                  3. sdk를 사용할때 원할한 인터넷통신을 위해서 다음코드를{\" \"}\n                  <b>AndroidManifest.xml</b> 에 추가해줍니다.\n                </S.DocsDes>\n                <S.DocsCode>android:usesCleartextTraffic=\"true\"</S.DocsCode>\n                <S.DocsSubTitle>초기화</S.DocsSubTitle>\n                <S.DocsDes>\n                  1. 사용할 클래스에서 DsmSdk파일을 import 해야합니다.\n                </S.DocsDes>\n                <S.DocsCode>\n                  import com.semicolon.dsm_sdk_v1.DTOuser import\n                  <br />\n                  com.semicolon.dsm_sdk_v1.DsmSdk import\n                  <br />\n                  com.semicolon.dsm_sdk_v1.token\n                  <br />\n                </S.DocsCode>\n                <S.DocsDes>\n                  2. 발급받은 client id,client secret, 그리고 프로젝트의\n                  redirectURL(없을경우 발급받은 default redirectURL)을 통해서\n                  DsmSdk를 초기화 해야합니다.\n                  <br />\n                  <br /> - DsmSdk.instance.initSDK()메서드를 사용합니다.\n                  <br /> - 예제의 홀화살괄호`〈 〉`로 감싸져 있는 부분은\n                  사용자가 정의해주셔야합니다.\n                </S.DocsDes>\n                <S.DocsCode>{androidcode}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>로그인</S.DocsTitle>\n                <S.DocsDes>\n                  - DSM_Auth계정으로 로그인 하려면 instance내부에 있는\n                  loginWithAuth()메서드를 사용해야합니다.\n                  <br /> - loginWithAuth()메서드를 사용하는 방법은 다음과\n                  같습니다.\n                  <br />\n                  <br /> 1. 첫번째 매개변수로 context를 줍니다.\n                  <br /> 2. 두번째 매개변수로 토큰을 받았을때 실행할 콜백함수를\n                  줍니다.\n                  <br /> 3. 세번째 사용자 정보를 받았을때 실행할 콜백함수를\n                  줍니다.\n                  <br /> 4. 메서드를 실행합니다. <br />- name은 이름, email은\n                  이메일,gcn은 학번(4자리)를 반환합니다\n                  <br />\n                  <br /> - 예시코드\n                </S.DocsDes>\n                <S.DocsCode>{androidcode2}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>토큰 재발급</S.DocsTitle>\n                <S.DocsDes>\n                  - DsmSdk는 access token을 재발급 받을수있는 **refreshToken()**\n                  메서드를 지원합니다.\n                  <br /> - 파라미터로 로그인할때 받아온 refresh토큰과 access\n                  token을 재발급 받았을때 실행할 콜백 메서드를 넣어줍니다.\n                  <br />\n                  <br /> - 예시코드\n                </S.DocsDes>\n                <S.DocsCode>{androidcode3}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>사용자 정보 받아오기</S.DocsTitle>\n                <S.DocsDes>\n                  - DsmSdk는 accessToken으로 사용자의 정보를 받아오는\n                  **getUserInformation()** 메서드를 지원합니다.\n                  <br />\n                  - 파라미터로 access token과 정보를 받아왔을때 실행할\n                  콜백메서드를 넣어줍니다.\n                  <br />\n                  <br />- 예시코드\n                </S.DocsDes>\n                <S.DocsCode>{androidcode4}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>더보기</S.DocsTitle>\n                <S.DocsDes>\n                  - [DSMSDK 깃 허브]{\" \"}\n                  <S.DocsA href=\"https://github.com/semicolonDSM/DSMSDK_Android\">\n                    https://github.com/semicolonDSM/DSMSDK_Android\n                  </S.DocsA>\n                  <br />- [example code]\n                  <S.DocsA href=\"https://github.com/jaewonkim1468/DSM_SDK_TEST\">\n                    https://github.com/jaewonkim1468/DSM_SDK_TEST\n                  </S.DocsA>\n                </S.DocsDes>\n              </S.DocsSection>\n            </S.DocsWrapper>\n          </Route>\n          <Route path=\"/docs/3\">\n            <S.DocsWrapper className=\"docsWrap\">\n              <S.DocsSection>\n                <S.DocsTitle>시작하기</S.DocsTitle>\n                <S.DocsSubTitle>주의사항</S.DocsSubTitle>\n                <S.DocsDes>\n                  이 문서는 DSM_Auth를 위한 iOS DSMSDK사용법을 안내합니다.\n                  <br /> 모든 예제의 홀화살괄호`〈 〉`로 감싸져 있는 부분은\n                  사용자가 정의해주셔야합니다.\n                </S.DocsDes>\n                <S.DocsSubTitle>요구사항</S.DocsSubTitle>\n                <S.DocsDes>\n                  DSMSDK를 사용하기 위한 최소 요구사양은 아래와 같습니다.\n                  <br /> - iOS 13.0 이상.\n                  <br /> - Swift 5.0이상\n                </S.DocsDes>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>준비하기</S.DocsTitle>\n                <S.DocsSubTitle>설치하기</S.DocsSubTitle>\n                <S.DocsDes>\n                  <S.DocsA href=\"https://guides.cocoapods.org/using/getting-started.html#getting-started\">\n                    https://guides.cocoapods.org/using/getting-started.html#getting-started\n                  </S.DocsA>\n                  를 이용하여 간단하게 SDK를 설치 할 수 있습니다. Podfile에\n                  DSMSDK를 추가합니다.\n                </S.DocsDes>\n                <S.DocsCode>pod 'DSMSDK'</S.DocsCode>\n                <S.DocsSubTitle>\n                  외부 라이브러리 디펜던시(External library dependency)\n                </S.DocsSubTitle>\n                <S.DocsDes>\n                  DSMSDK를 설치하면 SDK에 필요한 라이브러리가 자동으로\n                  설치됩니다.\n                </S.DocsDes>\n                <S.DocsA href=\"https://github.com/Alamofire/Alamofire\">\n                  https://github.com/Alamofire/Alamofire\n                </S.DocsA>\n                <S.DocsSubTitle>초기화</S.DocsSubTitle>\n                <S.DocsDes>\n                  iOS 앱에서 DSMSDK를 사용하려면 DSMSDK 파일을 아래와 같이\n                  임포트(import)해야 합니다. 또한 발급받은 클라이언트\n                  아이디(client_id)와 클라이언트 시크릿(client_secret), 입력한\n                  redirectURL을 사용해 DSMSDK를 초기화 하는 과정이 필요합니다.\n                  다음 예제를 참고하여 AppDelegate.swift에 DSMSDK를 초기화하는\n                  코드를 추가합니다.\n                  <br />\n                  <br />\n                  <S.DocsCode>{swiftcode}</S.DocsCode>\n                </S.DocsDes>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>로그인</S.DocsTitle>\n                <S.DocsDes>\n                  DSM_Auth계정 정보를 입력하여 로그인합니다. DSM_Auth계정으로\n                  로그인 하려면 `loginWithDSMAuth()` API로 요청합니다.\n                  <br />\n                  파라미터로는 요청한 ViewController를 넣습니다. `self` 키워드로\n                  대체할 수 있습니다. 이 API를 호출하면 DSMSDK가\n                  웹뷰(WKWebView)를 실행하고 DSM_Auth 로그인 화면을 띄웁니다.\n                  <br />\n                  API 호출 시 결과 처리를 클로저(Closure) 객체로 정의하여\n                  전달해야 합니다. token 구조체에는 엑세스 토큰(Access_Token)과\n                  리프레쉬 토큰(Refresh_Token) 정보가 있습니다.\n                </S.DocsDes>\n                <S.DocsCode>{swiftcode2}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>토큰 재발급</S.DocsTitle>\n                <S.DocsDes>\n                  `tokenRefresh()` API로 access token을 재발급 받을 수 있습니다.\n                  파라미터로 로그인할 때 받아온 리프레쉬 토큰을 넣습니다.\n                  <br /> 다음은 토큰을 재발급받는 예제입니다.\n                </S.DocsDes>\n\n                <S.DocsCode>{swiftcode3}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>사용자 정보 받아오기</S.DocsTitle>\n                <S.DocsDes>\n                  사용자의 정보를 불러옵니다. `me()` API를 호출하여 불러올 수\n                  있습니다. 파라미터로는 엑세스 토큰을 넣습니다.\n                  <br /> 다음은 사용자 정보 요청 예제입니다. user 구조체에는\n                  이름(name), 학번(StudentID), 이메일(email) 정보가 있습니다.\n                </S.DocsDes>\n                <S.DocsCode>{swiftcode4}</S.DocsCode>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>더보기</S.DocsTitle>\n                <S.DocsDes>\n                  - [DSMSDK 깃 허브]{\" \"}\n                  <S.DocsA href=\"https://github.com/semicolonDSM/DSMSDK_iOS\">\n                    https://github.com/semicolonDSM/DSMSDK_iOS\n                  </S.DocsA>\n                  <br />- [example code]\n                  <S.DocsA href=\"https://github.com/kimxwan0319/DSMSDK_Test\">\n                    https://github.com/kimxwan0319/DSMSDK_Test\n                  </S.DocsA>\n                </S.DocsDes>\n              </S.DocsSection>\n            </S.DocsWrapper>\n          </Route>\n          <Route path=\"/docs/4\">\n            <S.DocsWrapper className=\"docsWrap\">\n              <S.DocsSection>\n                <S.DocsTitle>시작하기</S.DocsTitle>\n                <S.DocsBody></S.DocsBody>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>로그인</S.DocsTitle>\n                <S.DocsBody></S.DocsBody>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>토큰 재발급</S.DocsTitle>\n                <S.DocsBody></S.DocsBody>\n              </S.DocsSection>\n              <S.DocsSection>\n                <S.DocsTitle>정보 받아오기</S.DocsTitle>\n                <S.DocsBody></S.DocsBody>\n              </S.DocsSection>\n            </S.DocsWrapper>\n          </Route>\n        </S.ContentBox>\n      </S.Section>\n    </S.Wrapper>\n  );\n};\n\nexport default Api;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\myPage\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\index.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Api\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\Header\\Header.js",["157","158"],"import React, { useState, useEffect } from \"react\";\nimport * as S from \"./styles\";\n\nimport { HeaderAnimation } from \"../../../animation\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport logo from \"../../../assets/ass.svg\";\n\nimport Menu from \"./Menu\";\n\nimport axios from \"axios\";\n\nconst Header = ({ login, LogOut, AToken, switchPage }) => {\n  const history = useHistory();\n  const [log, setLog] = useState(false);\n  const [name, setName] = useState(\"\");\n  const loginURI = \"/login\";\n\n  useEffect(() => {\n    if (login === true) {\n      setLog(true);\n      if (sessionStorage.getItem(\"name\") == undefined) {\n        axios({\n          method: \"get\",\n          url: \"http://54.180.98.91:8090/v1/info/basic\",\n          headers: {\n            \"access-token\": `Bearer ${AToken}`,\n          },\n        })\n          .then((res) => {\n            console.log(res);\n            setName(res.data.name);\n          })\n          .catch((err) => {\n            console.log(err.response);\n          });\n      } else {\n        setName(sessionStorage.getItem(\"name\"));\n      }\n    } else {\n      setLog(false);\n    }\n  }, [login]);\n\n  useEffect(() => {\n    if (window.location.pathname === \"/\") {\n      HeaderAnimation();\n      document.getElementById(\"header\").style.height = \"85px\";\n    } else {\n      document.getElementById(\"header\").style.background =\n        \"rgba(26, 26, 28, 1)\";\n      document.getElementById(\"header\").style.height = \"70px\";\n    }\n  });\n\n  return (\n    <S.HeaderWrapper id=\"header\">\n      <S.HeaderContent>\n        <S.LogoImg\n          src={logo}\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        />\n        <S.NaviWrapper>\n          <S.NaviWrapper>\n            <S.LinkStyle\n              to=\"/docs\"\n              activeStyle={{ color: \"#350871\" }}\n              onClick={() => switchPage(null)}\n            >\n              Open API\n            </S.LinkStyle>\n          </S.NaviWrapper>\n          <S.NaviWrapper>\n            {log === false ? (\n              <S.LinkStyle to={loginURI} activeStyle={{ color: \"#350871\" }}>\n                로그인\n              </S.LinkStyle>\n            ) : (\n              <Menu name={name} LogOut={LogOut} />\n            )}\n          </S.NaviWrapper>\n        </S.NaviWrapper>\n      </S.HeaderContent>\n    </S.HeaderWrapper>\n  );\n};\n\nexport default Header;\n","D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\Header\\Menu.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\Public\\Header\\styles.js",[],"D:\\semicolon\\DSM_Auth_Frontend\\src\\components\\myPage\\registerModal.js",["159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":14},{"ruleId":"168","severity":1,"message":"169","line":29,"column":16,"nodeType":"170","messageId":"171","endLine":29,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":56,"column":6,"nodeType":"174","endLine":56,"endColumn":8,"suggestions":"175"},{"ruleId":"164","severity":1,"message":"176","line":21,"column":19,"nodeType":"166","messageId":"167","endLine":21,"endColumn":23},{"ruleId":"164","severity":1,"message":"177","line":21,"column":25,"nodeType":"166","messageId":"167","endLine":21,"endColumn":32},{"ruleId":"164","severity":1,"message":"178","line":22,"column":10,"nodeType":"166","messageId":"167","endLine":22,"endColumn":17},{"ruleId":"164","severity":1,"message":"179","line":22,"column":25,"nodeType":"166","messageId":"167","endLine":22,"endColumn":32},{"ruleId":"172","severity":1,"message":"180","line":44,"column":6,"nodeType":"174","endLine":44,"endColumn":8,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"182","line":125,"column":36,"nodeType":"170","messageId":"171","endLine":125,"endColumn":38},{"ruleId":"168","severity":1,"message":"182","line":135,"column":48,"nodeType":"170","messageId":"171","endLine":135,"endColumn":50},{"ruleId":"164","severity":1,"message":"183","line":1,"column":35,"nodeType":"166","messageId":"167","endLine":1,"endColumn":44},{"ruleId":"164","severity":1,"message":"184","line":15,"column":10,"nodeType":"166","messageId":"167","endLine":15,"endColumn":15},{"ruleId":"164","severity":1,"message":"185","line":15,"column":17,"nodeType":"166","messageId":"167","endLine":15,"endColumn":23},{"ruleId":"164","severity":1,"message":"186","line":16,"column":9,"nodeType":"166","messageId":"167","endLine":16,"endColumn":14},{"ruleId":"164","severity":1,"message":"187","line":17,"column":9,"nodeType":"166","messageId":"167","endLine":17,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":61,"column":9,"nodeType":"190","endLine":61,"endColumn":41},{"ruleId":"168","severity":1,"message":"182","line":108,"column":29,"nodeType":"170","messageId":"171","endLine":108,"endColumn":31},{"ruleId":"172","severity":1,"message":"191","line":149,"column":6,"nodeType":"174","endLine":149,"endColumn":17,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"182","line":216,"column":28,"nodeType":"170","messageId":"171","endLine":216,"endColumn":30},{"ruleId":"164","severity":1,"message":"193","line":16,"column":21,"nodeType":"166","messageId":"167","endLine":16,"endColumn":25},{"ruleId":"164","severity":1,"message":"179","line":16,"column":27,"nodeType":"166","messageId":"167","endLine":16,"endColumn":34},{"ruleId":"172","severity":1,"message":"194","line":39,"column":6,"nodeType":"174","endLine":39,"endColumn":8,"suggestions":"195"},{"ruleId":"164","severity":1,"message":"196","line":48,"column":9,"nodeType":"166","messageId":"167","endLine":48,"endColumn":15},{"ruleId":"188","severity":1,"message":"189","line":164,"column":21,"nodeType":"190","endLine":164,"endColumn":62},{"ruleId":"168","severity":1,"message":"182","line":179,"column":26,"nodeType":"170","messageId":"171","endLine":179,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":210,"column":19,"nodeType":"190","endLine":210,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":229,"column":19,"nodeType":"190","endLine":229,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":248,"column":19,"nodeType":"190","endLine":248,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":268,"column":19,"nodeType":"190","endLine":268,"endColumn":65},{"ruleId":"164","severity":1,"message":"183","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"197","line":1,"column":28,"nodeType":"166","messageId":"167","endLine":1,"endColumn":34},{"ruleId":"164","severity":1,"message":"198","line":183,"column":10,"nodeType":"166","messageId":"167","endLine":183,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":99,"column":17,"nodeType":"170","messageId":"171","endLine":99,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":101,"column":50,"nodeType":"170","messageId":"171","endLine":101,"endColumn":52},{"ruleId":"172","severity":1,"message":"199","line":145,"column":6,"nodeType":"174","endLine":145,"endColumn":8,"suggestions":"200"},{"ruleId":"168","severity":1,"message":"182","line":156,"column":48,"nodeType":"170","messageId":"171","endLine":156,"endColumn":50},{"ruleId":"168","severity":1,"message":"182","line":159,"column":48,"nodeType":"170","messageId":"171","endLine":159,"endColumn":50},{"ruleId":"168","severity":1,"message":"169","line":191,"column":57,"nodeType":"170","messageId":"171","endLine":191,"endColumn":59},{"ruleId":"168","severity":1,"message":"169","line":23,"column":42,"nodeType":"170","messageId":"171","endLine":23,"endColumn":44},{"ruleId":"172","severity":1,"message":"201","line":44,"column":6,"nodeType":"174","endLine":44,"endColumn":13,"suggestions":"202"},{"ruleId":"164","severity":1,"message":"187","line":12,"column":11,"nodeType":"166","messageId":"167","endLine":12,"endColumn":18},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Acookie', 'Aset', 'Rcookie', 'Rset', 'history', and 'query.code'. Either include them or remove the dependency array.","ArrayExpression",["205"],"'Rset' is assigned a value but never used.","'Rremove' is assigned a value but never used.","'Acookie' is assigned a value but never used.","'Aremove' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Aset', 'Rcookie', and 'history'. Either include them or remove the dependency array.",["206"],"Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setErr' is assigned a value but never used.","'check' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.",["207"],"'Aset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Acookie' and 'history'. Either include them or remove the dependency array.",["208"],"'source' is assigned a value but never used.","'useRef' is defined but never used.","'isInner' is defined but never used.","React Hook useLayoutEffect has missing dependencies: 'history' and 'props.number'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'AToken'. Either include it or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [Acookie, Aset, Rcookie, Rset, history, query.code]",{"range":"223","text":"224"},"Update the dependencies array to be: [Aset, Rcookie, history]",{"range":"225","text":"226"},"Update the dependencies array to be: [checkPass, password]",{"range":"227","text":"228"},"Update the dependencies array to be: [Acookie, history]",{"range":"229","text":"230"},"Update the dependencies array to be: [history, props.number]",{"range":"231","text":"232"},"Update the dependencies array to be: [AToken, login]",{"range":"233","text":"234"},[1618,1620],"[Acookie, Aset, Rcookie, Rset, history, query.code]",[1278,1280],"[Aset, Rcookie, history]",[3215,3226],"[checkPass, password]",[871,873],"[Acookie, history]",[4297,4299],"[history, props.number]",[1109,1116],"[AToken, login]"]