{"version":3,"sources":["GlobalStyled.js","components/Api/styles.js","components/Api/Api.js","components/Main/styles.js","animation.js","components/Main/MainBody.js","components/Public/Header/styles.js","assets/ass.svg","components/Public/Header/Header.js","components/Main/Main.js","components/Login/styles.js","components/Login/LoginButton.js","components/Login/Login.js","components/Register/styles.js","components/Register/Register.js","components/Login/LoginClient.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyled","createGlobalStyle","Wrapper","styled","div","Section","props","bgColor","height","Api","BodyWrapper","img","css","ContentBox","column","fadeIn","keyframes","Title","p","fontSize","bold","color","ani","margin","button","just","width","gsap","registerPlugin","ScrollTrigger","Show","name","timeline","from","opacity","x","duration","to","Refractor","registerLanguage","require","MainBody","useEffect","asd","create","animation","trigger","start","end","toggleActions","FirstAnimation","id","language","value","HeaderWrapper","LogoImg","NaviWrapper","LinkStyle","NavLink","Header","history","useHistory","background","HeaderAnimation","src","logo","onClick","push","activeStyle","Main","exact","path","component","nono","InputWrapper","Inter","on","Input","input","Img","ButtonP","Button","Circle","Agree","Label","label","CheckBox","CInput","CButton","a","LoginButton","onSubmit","Login","query","queryString","parse","location","search","useState","setId","password","setPass","check","useRef","login","e","preventDefault","redirect_url","client_id","current","checked","alert","axios","url","method","data","then","res","console","log","window","href","catch","err","my","style","display","flexDirection","alignItems","type","onChange","target","ref","htmlFor","FirstWrapper","Slide","none","bottom","CountP","Register","React","memo","countTime","setCountTime","state","setState","email","setEmail","checkNum","setCheckNum","setPassword","checkPass","setCheckPass","code","setCode","setName","inputEmail","checkNumber","temp","passState","clearInterval","placeholder","exec","message","setInterval","prev","Math","floor","toString","padStart","Number","authCode","LoginClient","App","scrollTo","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dc8c73d.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyled = createGlobalStyle`\r\n    body, html {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        position: relative;\r\n    }\r\n\r\n    #root {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        user-select: none;\r\n        -webkit-user-select: text;\r\n        white-space: nowrap;\r\n        letter-spacing: -1px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyled;\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 100%;\r\n`\r\n\r\nexport const Section = styled.div`\r\n    background: ${props => props.bgColor || \"white\"};\r\n    width: 100%;\r\n    height: ${props => props.height || \"800px\"};\r\n`\r\n\r\nexport const ContentBox = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`","import React from 'react'\r\n\r\nimport * as S from './styles'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Section height=\"500px\">\r\n                \r\n            </S.Section>\r\n        </S.Wrapper>\r\n    )\r\n}\r\n\r\nexport default Api","import styled, { css, keyframes } from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const BodyWrapper = styled.div`\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  background: ${(props) => props.bgColor || \"white\"};\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"800px\"};\r\n  background-image: url(${(props) => props.img || \"none\"});\r\n  ${(props) =>\r\n    props.img &&\r\n    css`\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n      background-position: center center;\r\n    `}\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  ${(props) =>\r\n    props.column &&\r\n    css`\r\n      flex-direction: column;\r\n    `}\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n    from {\r\n        transform: translateX(-50px);\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        transform: translateX(0px);\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: ${(props) => props.fontSize || \"18px\"};\r\n  ${(props) =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: 600;\r\n    `}\r\n  color: ${(props) => props.color || \"white\"};\r\n  ${(props) =>\r\n    props.ani &&\r\n    css`\r\n      transform: translateX(-20px);\r\n      opacity: 0;\r\n      animation-name: ${fadeIn};\r\n      animation-duration: 1.5s;\r\n      animation-fill-mode: forwards;\r\n    `}\r\n  margin: ${(props) => props.margin || \"0\"};\r\n  color: white;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 15px 45px;\r\n  font-size: 22px;\r\n  color: white;\r\n  background: black;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border-radius: 15px;\r\n  border: none;\r\n\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    transform: translate(-3px, -3px);\r\n    box-shadow: 4px 4px 7px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport const FlexBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.just &&\r\n    css`\r\n      justify-content: space-between;\r\n    `}\r\n  width: ${(props) => props.width || \"auto\"};\r\n  overflow: visible;\r\n`;\r\n","import gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/all\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport const HeaderAnimation = () => {\r\n  const asd = gsap.timeline();\r\n\r\n  asd.to(\"#header\", { background: \"rgba(26, 26, 28, 1)\", duration: 0.1 });\r\n\r\n  ScrollTrigger.create({\r\n    animation: asd,\r\n    trigger: \"#headerPoint\",\r\n    start: \"-=80\",\r\n    end: \"top top\",\r\n    toggleActions: \"play pause pause reverse\",\r\n  });\r\n};\r\n\r\nexport const FirstAnimation = () => {\r\n  const asd = gsap.timeline();\r\n\r\n  asd\r\n    .from(\"#first\", { x: -50, opacity: 0 })\r\n    .to(\"#first\", { x: 0, opacity: 1, duration: 0.2 });\r\n\r\n  ScrollTrigger.create({\r\n    animation: asd,\r\n    trigger: \"#first\",\r\n    start: \"-=500\",\r\n    end: \"+=200\",\r\n    toggleActions: \"play complete pause reset\",\r\n  });\r\n};\r\n\r\nexport const Show = (name) => {\r\n  const asd = gsap.timeline();\r\n\r\n  asd\r\n    .from(name, { opacity: 0, x: -80, duration: 1 })\r\n    .to(name, { x: 0, opacity: 1, duration: 1 });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport Refractor from \"react-refractor\";\r\n\r\nimport { FirstAnimation } from \"../../animation\";\r\n\r\nRefractor.registerLanguage(require(\"refractor/lang/javascript\"));\r\n\r\nconst MainBody = () => {\r\n  useEffect(() => {\r\n    FirstAnimation();\r\n  }, []);\r\n  const source = `\r\nconst foo = 'bar'\r\nconst bar = 'foo'\r\nconst baz = foo + bar\r\n`;\r\n\r\n  return (\r\n    <S.BodyWrapper>\r\n      <S.Section\r\n        id=\"section1\"\r\n        img=\"https://www.itl.cat/pngfile/big/109-1092015_huge-interstellar-photos-pictures-outer-space.png\"\r\n        height=\"500px\"\r\n      >\r\n        <S.ContentBox column></S.ContentBox>\r\n      </S.Section>\r\n      <S.Section id=\"headerPoint\" bgColor=\"black\" height=\"500px\">\r\n        <S.ContentBox></S.ContentBox>\r\n      </S.Section>\r\n      <S.Section bgColor=\"black\" height=\"500px\">\r\n        <S.ContentBox column>\r\n          <S.Title id=\"first\">안녕하세요</S.Title>\r\n        </S.ContentBox>\r\n      </S.Section>\r\n      <S.Section bgColor=\"black\" height=\"500px\">\r\n        <S.ContentBox column>\r\n          <Refractor language=\"js\" value={source} />\r\n        </S.ContentBox>\r\n      </S.Section>\r\n      <S.Section bgColor=\"black\" height=\"500px\">\r\n        <S.ContentBox column></S.ContentBox>\r\n      </S.Section>\r\n      <S.Section bgColor=\"black\" height=\"500px\">\r\n        <S.ContentBox column></S.ContentBox>\r\n      </S.Section>\r\n    </S.BodyWrapper>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  height: 65px;\r\n  padding: 5px 150px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(26, 26, 28, 0);\r\n  z-index: 10000;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    height: 50px;\r\n    padding: 7px 30px;\r\n  }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const NaviWrapper = styled.div`\r\n  display: flex;\r\n  margin-left: 35px;\r\n`;\r\n\r\nexport const LinkStyle = styled(NavLink)`\r\n  text-decoration: none;\r\n  //color: #713EFF;\r\n  color: white;\r\n  font-size: 18px;\r\n\r\n  margin-left: 15px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/ass.4d28089c.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport { HeaderAnimation } from \"../../../animation\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport logo from \"../../../assets/ass.svg\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    HeaderAnimation();\r\n  }, []);\r\n\r\n  return (\r\n    <S.HeaderWrapper id=\"header\">\r\n      <S.LogoImg\r\n        src={logo}\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}\r\n      />\r\n      <S.NaviWrapper>\r\n        <S.NaviWrapper>\r\n          <S.LinkStyle to=\"/api\" activeStyle={{ color: \"#350871\" }}>\r\n            Open API\r\n          </S.LinkStyle>\r\n        </S.NaviWrapper>\r\n        <S.NaviWrapper>\r\n          <S.LinkStyle to=\"/login\" activeStyle={{ color: \"#350871\" }}>\r\n            로그인\r\n          </S.LinkStyle>\r\n          <S.LinkStyle to=\"/register\" activeStyle={{ color: \"#350871\" }}>\r\n            회원가입\r\n          </S.LinkStyle>\r\n        </S.NaviWrapper>\r\n      </S.NaviWrapper>\r\n    </S.HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Api from \"../Api/Api\";\r\nimport MainBody from \"./MainBody\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Header } from \"../Public\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <S.Wrapper>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainBody} />\r\n          <Route path=\"/api\" component={Api} />\r\n          <Route path=\"/asd\" component={() => <></>} />\r\n        </Switch>\r\n      </S.Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Section = styled.div`\r\n  background: ${(props) => props.bgColor || \"white\"};\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"100%\"};\r\n  background-image: url(${(props) => props.img || \"none\"});\r\n  ${(props) =>\r\n    props.img &&\r\n    css`\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n      background-position: center center;\r\n    `}\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: white;\r\n  font-size: 23px;\r\n  ${(props) =>\r\n    props.nono &&\r\n    css`\r\n      justify-content: flex-start;\r\n    `}\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  border-radius: 2px;\r\n  background: white;\r\n  width: 350px;\r\n  height: 45px;\r\n  padding: 3px 5px;\r\n  margin: 16px 30px;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: -webkit-fill-available;\r\n    margin: 16px 25px;\r\n  }\r\n`;\r\n\r\nexport const Inter = styled.p`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 10px;\r\n  transition: all 0.25s;\r\n  transform: translateY(-30%);\r\n  font-size: 17px;\r\n  color: black;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 15px;\r\n    top: 10%;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.on &&\r\n    css`\r\n      top: -50%;\r\n      transform: translateY(-100%);\r\n      left: 12px;\r\n      font-size: 16px;\r\n      color: white;\r\n    `}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 18px;\r\n  border: none;\r\n  outline: none;\r\n  color: black;\r\n  letter-spacing: 1px;\r\n\r\n  &:focus {\r\n    & + ${Inter} {\r\n      top: -50%;\r\n      transform: translateY(-100%);\r\n      left: 12px;\r\n      font-size: 16px;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  margin-bottom: 55px;\r\n  cursor: pointer;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: 200px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const ButtonP = styled.p`\r\n  font-size: 26px;\r\n  color: white;\r\n  text-shadow: 0 8px 15px rgba(0, 0, 0, 0.6);\r\n  transition: all 0.25s;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 30px;\r\n  width: 350px;\r\n  height: 60px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: #713eff;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n\r\n  transition: all 0.25s;\r\n\r\n  &:hover {\r\n    background: #5f32e5;\r\n  }\r\n\r\n  &:active {\r\n    background: black;\r\n    border: 1px solid #713eff;\r\n  }\r\n\r\n  &:active ${ButtonP} {\r\n    font-size: 23px;\r\n    color: #713eff;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: 200px;\r\n    height: 50px;\r\n\r\n    &:active ${ButtonP} {\r\n      font-size: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Circle = styled.div`\r\n  background: #6335ea;\r\n  height: 360px;\r\n  width: 360px;\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  transition: all 0.2s linear;\r\n  transform: scale(0);\r\n`;\r\n\r\nexport const Agree = styled.p`\r\n  font-size: 14px;\r\n  margin: 10px 0 -5px;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 18px;\r\n  height: 18px;\r\n  background: white;\r\n  margin: 5px 5px 5px 10px;\r\n  border-radius: 3px;\r\n\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    width: 15px;\r\n    height: 1.5px;\r\n    background: red;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform-origin: left center;\r\n    transform: rotate(45deg) translate(-50%, -50%);\r\n    transition: all 0.25s;\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    width: 15px;\r\n    height: 1.5px;\r\n    background: red;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform-origin: left center;\r\n    transform: rotate(-45deg) translate(-50%, -50%);\r\n    transition: all 0.25s;\r\n  }\r\n`;\r\n\r\nexport const CheckBox = styled.input`\r\n  display: none;\r\n  cursor: pointer;\r\n\r\n  &:checked {\r\n    & + ${Label}::after {\r\n      background: green;\r\n      width: 8px;\r\n      transform: rotate(45deg) translate(-70%, 120%);\r\n    }\r\n    & + ${Label}::before {\r\n      background: green;\r\n      width: 11px;\r\n      transform: rotate(-45deg) translate(-30%, 50%);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  padding: 8px 15px;\r\n  display: flex;\r\n  border-bottom: 2px solid rgb(200, 200, 200);\r\n  @media screen and (max-width: 768px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const BodyWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin: -30px 0 0 0;\r\n    transform: scale(0.8);\r\n  }\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const CInput = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid rgb(230, 230, 230);\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 8px 0;\r\n  margin: 10px 0;\r\n  outline: none;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: rgb(210, 210, 210);\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const CButton = styled.button`\r\n  width: 100%;\r\n  height: 50px;\r\n  background: #713eff;\r\n  padding: 8px 0;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #6a3fea;\r\n  }\r\n`;\r\n\r\nexport const CA = styled.a`\r\n  color: rgb(150, 150, 150);\r\n  font-size: 12px;\r\n  align-self: center;\r\n  margin-top: 40px;\r\n`;\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst LoginButton = (props) => {\r\n  return (\r\n    <S.Button id=\"circleButton\" onClick={props.onSubmit}>\r\n      <S.Circle id=\"circle\" />\r\n      <S.ButtonP>로그인</S.ButtonP>\r\n    </S.Button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport queryString from \"query-string\";\r\n\r\nimport logo from \"../../assets/ass.svg\";\r\n\r\nimport LoginButton from \"./LoginButton\";\r\n\r\nconst Login = (props) => {\r\n  const query = queryString.parse(props.location.search);\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n  const [error, setErr] = useState([false, false]);\r\n  const check = useRef();\r\n  const history = useHistory();\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    const { redirect_url, client_id } = query;\r\n    if (!check.current.checked) {\r\n      alert(\"체크항목을 확인하세요.\");\r\n      if (!(id === \"\" || password === \"\")) {\r\n        return;\r\n      }\r\n    }\r\n    if (id === \"\" || password === \"\") {\r\n      if (id === \"\") {\r\n        // document.getElementById(\"id1\").style.color = \"red\";\r\n      }\r\n      if (password === \"\") {\r\n        // document.getElementById(\"password1\").style.color = \"red\";\r\n      }\r\n      alert(\"아이디나 비밀번호를 입력하세요.\");\r\n      return;\r\n    }\r\n    axios({\r\n      url: \"/dsmauth/login\",\r\n      method: \"post\",\r\n      data: {\r\n        id,\r\n        password,\r\n        redirect_url,\r\n        client_id,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        window.location.href = res.data.location;\r\n      })\r\n      .catch((err) => {\r\n        alert(\"아이디나 비밀번호가 틀렸습니다.\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //if(Object.keys(query).length === 0) return <>Error</>;\r\n\r\n  return (\r\n    <S.Section bgColor=\"black\">\r\n      <S.Img\r\n        onClick={() => {\r\n          props.my === true && history.push(\"/\");\r\n        }}\r\n        src={logo}\r\n        width=\"300\"\r\n      />\r\n      <form\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n        onSubmit={login}\r\n      >\r\n        <S.InputWrapper>\r\n          <S.Input\r\n            value={id}\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setId(e.target.value);\r\n              console.log(e.target.value);\r\n            }}\r\n          />\r\n          <S.Inter id=\"id1\" on={id !== \"\" ? true : false}>\r\n            ID\r\n          </S.Inter>\r\n        </S.InputWrapper>\r\n        <S.InputWrapper>\r\n          <S.Input\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={(e) => setPass(e.target.value)}\r\n          />\r\n          <S.Inter id=\"password1\" on={password !== \"\" ? true : false}>\r\n            PASSWORD\r\n          </S.Inter>\r\n        </S.InputWrapper>\r\n        <S.Agree>\r\n          당신의 정보를 서비스에서 이용하는걸 동의하십니까 ?\r\n          <S.CheckBox id=\"asd\" type=\"checkbox\" ref={check} />\r\n          <S.Label htmlFor=\"asd\" />\r\n        </S.Agree>\r\n        <LoginButton onSubmit={login} />\r\n      </form>\r\n    </S.Section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Section = styled.div`\r\n  background: ${(props) => props.bgColor || \"white\"};\r\n  width: 100%;\r\n  height: ${(props) => props.height || \"100%\"};\r\n  background-image: url(${(props) => props.img || \"none\"});\r\n  ${(props) =>\r\n    props.img &&\r\n    css`\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n      background-position: center center;\r\n    `}\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: white;\r\n  font-size: 23px;\r\n`;\r\n\r\nexport const FirstWrapper = styled.div`\r\n  height: 750px;\r\n  width: 500px;\r\n  background: white;\r\n  box-shadow: inset 0 0 25px rgba(0, 0, 0, 0.5);\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px 25px;\r\n`;\r\n\r\nexport const Slide = styled.div`\r\n  position: relative;\r\n  margin: 15px 0;\r\n  padding: 10px 20px;\r\n  color: black;\r\n  font-size: 18px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.none === false\r\n      ? css`\r\n          visibility: hidden;\r\n        `\r\n      : css`\r\n          visibility: visible;\r\n        `}\r\n\r\n  ${(props) =>\r\n    props.column &&\r\n    css`\r\n      flex-direction: column;\r\n    `}\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 200px;\r\n  margin: 10px 0 30px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Header = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin: 0 0 10px;\r\n  color: black;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 250px;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  padding: 10px 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #757575;\r\n  outline: none;\r\n\r\n  ${(props) =>\r\n    props.bottom &&\r\n    css`\r\n      margin-bottom: 10px;\r\n      width: 280px;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 7px 15px;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 17px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);\r\n\r\n  transition: all 0.25s;\r\n\r\n  &:hover {\r\n    transform: translateY(-7px);\r\n    box-shadow: 0 14px 10px rgba(0, 0, 0, 0.2);\r\n    color: white;\r\n    background: #713eff;\r\n  }\r\n`;\r\n\r\nexport const CountP = styled.p`\r\n  margin: 0;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: -23px;\r\n  transform: translateX(-50%);\r\n  font-size: 14px;\r\n  display: flex;\r\n  width: 50%;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport logo from \"../../assets/ass.svg\";\r\n\r\nimport { Show } from \"../../animation\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Register = React.memo(() => {\r\n  const history = useHistory();\r\n  const [countTime, setCountTime] = useState(0);\r\n  const [state, setState] = useState([false, false, false]);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [checkNum, setCheckNum] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [checkPass, setCheckPass] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const inputEmail = useRef();\r\n  const checkNumber = useRef();\r\n  const temp = useRef();\r\n  const passState = useRef();\r\n\r\n  useEffect(() => {\r\n    Show(\"#email\");\r\n  }, []);\r\n\r\n  const register = () => {\r\n    axios({\r\n      url: \"/auth/signup\",\r\n      method: \"post\",\r\n      data: {\r\n        id,\r\n        password,\r\n        name,\r\n        email,\r\n        authCode: code,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const EmailCheck = () => {\r\n    if (state[0] === true) {\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      alert(\"이메일을 입력하세요.\");\r\n      return;\r\n    } else if (/@dsm.hs.kr/.exec(email) === null) {\r\n      alert(\"이메일 양식이 맞지 않습니다.\");\r\n      return;\r\n    }\r\n\r\n    axios({\r\n      url: \"/auth/email\",\r\n      method: \"post\",\r\n      data: {\r\n        email,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        checkNumber.current = res.data.message;\r\n        setCountTime(300);\r\n\r\n        temp.current = setInterval(() => {\r\n          setCountTime((prev) => prev - 1);\r\n        }, 1000);\r\n        Show(\"#emailCheck\");\r\n        setState([true, false, false]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (countTime <= 0) {\r\n      clearInterval(temp.current);\r\n    }\r\n  }, [countTime]);\r\n\r\n  const checkEmailNumber = () => {\r\n    if (countTime <= 0) {\r\n      alert(\"인증시간이 만료되었습니다. 다시 시도하세요.\");\r\n      return;\r\n    }\r\n\r\n    if (state[1] === true) {\r\n      return;\r\n    }\r\n\r\n    if (checkNumber.current != Number(checkNum)) {\r\n      alert(\"인증번호가 틀립니다 !\");\r\n      return;\r\n    }\r\n\r\n    inputEmail.current = 100;\r\n    setState([true, true, false]);\r\n    Show(\"#checkID\");\r\n  };\r\n\r\n  const checkId = () => {\r\n    if (state[2] === true) {\r\n      return;\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/auth/check/id\",\r\n      data: {\r\n        id,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        alert(\"아이디가 사용 가능합니다 !\");\r\n        setState([true, true, true]);\r\n        Show(\"etc\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"아이디가 중복됩니다 !\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checkPass !== password) {\r\n      passState.current.style.color = \"red\";\r\n    } else {\r\n      passState.current.style.color = \"black\";\r\n    }\r\n  }, [checkPass]);\r\n\r\n  return (\r\n    <S.Section bgColor=\"black\">\r\n      <S.FirstWrapper>\r\n        <S.Img onClick={() => history.push(\"/\")} src={logo} />\r\n        <S.Header>회원가입</S.Header>\r\n        <S.Slide id=\"email\">\r\n          <S.Input\r\n            value={email}\r\n            onChange={(e) => {\r\n              if (inputEmail.current !== 100) setEmail(e.target.value);\r\n            }}\r\n            placeholder=\"이메일을 입력하세요.\"\r\n          />\r\n          <S.Button onClick={EmailCheck}>이메일 인증</S.Button>\r\n        </S.Slide>\r\n        <S.Slide none={state[0]} id=\"emailCheck\">\r\n          <S.CountP>\r\n            <span>인증번호를 발송했습니다.</span>\r\n            <span>\r\n              {Math.floor(countTime / 60)}:\r\n              {(countTime % 60).toString().padStart(2, \"0\")}\r\n            </span>\r\n          </S.CountP>\r\n          <S.Input\r\n            onChange={(e) => {\r\n              if (state[2] === true) {\r\n                return;\r\n              }\r\n              if (inputEmail.current !== 100) setCheckNum(e.target.value);\r\n              if (state[1] === true) {\r\n                return;\r\n              }\r\n            }}\r\n            placeholder=\"인증번호를 입력하세요.\"\r\n            value={checkNum}\r\n          />\r\n          <S.Button onClick={checkEmailNumber}>인증번호 확인</S.Button>\r\n        </S.Slide>\r\n        <S.Slide none={state[1]} id=\"checkID\">\r\n          <S.Input\r\n            value={id}\r\n            onChange={(e) => setId(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"아이디를 입력하세요.\"\r\n          />\r\n          <S.Button onClick={checkId}>중복 체크</S.Button>\r\n        </S.Slide>\r\n        <S.Slide column none={state[2]} id=\"etc\">\r\n          <S.Input\r\n            bottom\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"이름을 입력하세요.\"\r\n          />\r\n          <S.Input\r\n            bottom\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"비밀번호를 입력하세요.\"\r\n          />\r\n          <S.Input\r\n            bottom\r\n            value={checkPass}\r\n            onChange={(e) => {\r\n              if (password != \"\") setCheckPass(e.target.value);\r\n            }}\r\n            placeholder=\"비밀번호를 한번 더 입력하세요.\"\r\n            ref={passState}\r\n          />\r\n          <S.Input\r\n            bottom\r\n            value={code}\r\n            onChange={(e) => setCode(e.target.value)}\r\n            placeholder=\"발급받은 코드를 입력해주세요.\"\r\n          />\r\n          <S.Button onClick={register}>회원가입 하기</S.Button>\r\n        </S.Slide>\r\n      </S.FirstWrapper>\r\n    </S.Section>\r\n  );\r\n});\r\n\r\nexport default Register;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport * as S from \"./styles\";\r\n\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport queryString from \"query-string\";\r\n\r\nimport logo from \"../../assets/ass.svg\";\r\n\r\nconst LoginClient = (props) => {\r\n  const query = queryString.parse(props.location.search);\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n  const [error, setErr] = useState([false, false]);\r\n  const check = useRef();\r\n  const history = useHistory();\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    const { redirect_url, client_id } = query;\r\n    /* if (!check.current.checked) {\r\n      alert(\"체크항목을 확인하세요.\");\r\n      if (!(id === \"\" || password === \"\")) {\r\n        return;\r\n      }\r\n    } */\r\n    if (id === \"\" || password === \"\") {\r\n      if (id === \"\") {\r\n        // document.getElementById(\"id1\").style.color = \"red\";\r\n      }\r\n      if (password === \"\") {\r\n        // document.getElementById(\"password1\").style.color = \"red\";\r\n      }\r\n      alert(\"아이디나 비밀번호를 입력하세요.\");\r\n      return;\r\n    }\r\n    axios({\r\n      url: \"/dsmauth/login\",\r\n      method: \"post\",\r\n      data: {\r\n        id,\r\n        password,\r\n        redirect_url,\r\n        client_id,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        window.location.href = res.data.location;\r\n      })\r\n      .catch((err) => {\r\n        alert(\"아이디나 비밀번호가 틀렸습니다.\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <S.Section nono>\r\n      <S.Header>\r\n        <img height=\"100%\" src={logo} />\r\n      </S.Header>\r\n      <S.BodyWrapper>\r\n        <S.ContentBox>\r\n          <h2 style={{ color: \"black\" }}>Login</h2>\r\n          <form\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <S.CInput\r\n              value={id}\r\n              onChange={(e) => setId(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"ID\"\r\n            />\r\n            <S.CInput\r\n              value={password}\r\n              onChange={(e) => setPass(e.target.value)}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <S.CButton onClick={login}>Login</S.CButton>\r\n          </form>\r\n        </S.ContentBox>\r\n      </S.BodyWrapper>\r\n    </S.Section>\r\n  );\r\n};\r\n\r\nexport default LoginClient;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport GlobalStyled from \"./GlobalStyled\";\r\n\r\nimport { Main, Login, Register, LoginClient } from \"./components\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <GlobalStyled />\r\n      <Switch>\r\n        <Route\r\n          path=\"/login\"\r\n          render={(props) => <Login my={true} {...props} />}\r\n        />\r\n        <Route path=\"/external/login\" component={LoginClient} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/\" component={Main} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}